Group Members: Nick Williams, Alex Watt, Benjamin Zadow

Current configuration estimates of mean and std. deviation for following quantities:
ReplicationModel class

For these answers, we ran the simulations under the ReplicationModel class in order to use varying seeds and run 500 replications under the same configuration. The statistics were stored in a Tally for the values in #2-#5 and then the averages and standard devation were taken from the Tally after the 500 replications were ran.

1. clinic's daily operating costs
	avg out of 150 replications: mean of: 31375.4 and std dev: 4637.99924
2. number of patients per day that:
	a. arrive at the clinic for treatment: mean: 93.814, std. dev: 9.69305
	b. balk due to an overcrowded waiting room: mean: 25.456, std dev: 7.6596
	c. get diverted to the ER after being seen by the nurse: 8.42, std dev: 3.59905
	d. get fully treated at the clinic: 60.086, std. dev: 6.97796
3. the average response time of patients that get fully treated at the clinic (i.e., they don’t balk or get diverted to the emergency room);
	avg response time: mean: 36.56704, std. dev: 7.97348
4. the utilization rates for the nurse and specialist, computed across the time period from 8 am until the nurse and specialist leave the clinic (which is not necessarily 8 pm!); This was found from the statistics provided by the Res class.
	nurse: mean: 0.57621, std dev: 0.05859
	spec: mean: 0.4854, std Dev.: 0.1446
5. the average number of patients in the waiting room, computed across the time period from 8 am until the nurse and specialist leave the clinic.
	avg. num of patients in waiting room: mean:0.94706, std. dev: 0.30764

System Comparison: done by replicating the configurations 500 times:
(Replication Model)
avg cost for 4 rooms, 1 nurse, 1 spec: 
Sample mean: 31375.4
sampleStdDev: 4637.99924
Approx. 95% Normal CI: [30968.86144,31781.93856]
Approx. 95% T-Dist CI: [30968.86144,31781.93856]
DESMO-J 95% Conf.Int.: [30967.88048,31782.91952]
1. Is there a statistically signiﬁcant decrease in daily costs when adding an additional nurse?
	Avg cost: 28172.6	sampleStdDev: 3752.66228
				Approx. 95% Normal CI: [27843.66465,28501.53535]
				Approx. 95% T-Dist CI: [27843.66465,28501.53535]
				DESMO-J 95% Conf.Int.: [27842.87094,28502.32906]
Yes, there is a statistically significant decrease in daily costs when adding an additional nurse as the normal distributions interval does not contain the base configuration's average cost for the clinic.
2. Is there a statistically signiﬁcant decrease in daily costs when adding an additional specialist?
	Avg cost:32496.0	sampleStdDev: 4636.89828
				Approx. 95% Normal CI: [32089.55795,32902.44205]
				Approx. 95% T-Dist CI: [32089.55795,32902.44205]
				DESMO-J 95% Conf.Int.: [32088.57721,32903.42279]
No, there is no statistically significant decrease in daily costs when adding an additional specialist as the cost actually increases when compared to the base configuration. The 95% CI does not contain any part of the interval from the base configuration's 95% CI either.

System Optimization: bestConfig and ReplicationModel classes
To find the configuration that was the cheapest for the hospital, we ran different configurations for a certain number of replications. This number of replications here was 100. We chose this so we could easily take the average while running all of these configurations with a different seed for each replication. The different configurations ranged from 4 rooms to 8 with between 1-4 nurses and specialists for each possible configuration. These numbers were chosen after noticing that generally the costs of the configurations only increasing as more rooms and nurses were added. The seed was changed so that the number of patients balking and other variables would be impacted a little more showing more variation as we saw total costs between replicaitons of the same configuration having a range of 10000 between the minimum and maximum costs. Once we narrowed the best configurations down, we took the top ones that were under 29000 as we got quite a bit that were under 30,000, and simulated the top 4 configurations 500 times each. Replications were increased so that we could be more confident in our result for best configuration.

1. Explore possible alternative conﬁgurations for the clinic based on acquiring additional nurses, specialists, and/or exam rooms, and ﬁnd a conﬁguration that minimizes the clinic’s expected daily operating costs.

Overall: the best configuration under the most replications was shown to be 4 rooms with 2 nurses and 1 specialist. That being said, 3 other configurations came within $1000 of this configuration's average cost.

The best possible configuration that we found using 100 replications was 4 rooms, 2 nurse and 1 specialist having an average total of $28,043.0 In addition to this, under 100 replications, configurations with 5 rooms 2 nurse and 1 specialist, 4 rooms 2 nurses 2 specialist and 6 rooms 2 nurses and 1 specialist were next closest with average costs being 28061.0, $28199.0 and $28136.0 respectively. After running the configuration of 5 rooms, 2 nurse, 1 specialist 500 times, the average cost was $31533.6 with a standard deviation of 4629.23002. The other configurations, in order, each had the following average costs after 500 replications: $28,185.4 with std. dev. 3701.18418, $28,227.6 with std. dev. 3179.87759, and $28243. with std. dev. 3646.06214 respectively. Therefore, with a larger sample size being taken into consideration, the configuration with 4 rooms, 2 nurse and 1 specialist minimized hospital costs the most as this model with 500 replications had an average cost of: $28172.6 and std. dev. of 3752.66228. Furthermore, these results show that there are several possible configurations that could potentially minimize profits with their mean costs being so close.

**95% Confidence Intervals were calculated in the ReplicationModel Class Using a tally in the following way:
    public void computeApproxNormalConfidenceInterval(Tally repResults) {
        double sampleMean = repResults.getMean();
        double sampleStdDev = repResults.getStdDev();
        double stdError = sampleStdDev / Math.sqrt(NUM_REPLICATIONS);
        double intervalHalfWidth = 1.96 * stdError;
        double ciLB = sampleMean - intervalHalfWidth;
        double ciUB = sampleMean + intervalHalfWidth;
        System.out.println("Sample mean: " + sampleMean);
        System.out.println("sampleStdDev: " + sampleStdDev);
        System.out.format("Approx. 95%% Normal CI: [%.5f,%.5f]\n", ciLB, ciUB);
    }